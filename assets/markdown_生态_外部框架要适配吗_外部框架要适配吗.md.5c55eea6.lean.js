import{_ as a,v as e,b as i,R as l}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/生态/外部框架要适配吗/外部框架要适配吗.md","filePath":"markdown/生态/外部框架要适配吗/外部框架要适配吗.md"}'),t={name:"markdown/生态/外部框架要适配吗/外部框架要适配吗.md"},r=l('<p>Java 生态的框架，一般都是可以直接用的（除非与某应用生态绑死了）。比如 okhttp, hikaricp 都是不需要适配的。</p><h3 id="哪些要适配" tabindex="-1">哪些要适配？ <a class="header-anchor" href="#哪些要适配" aria-label="Permalink to &quot;哪些要适配？&quot;">​</a></h3><ul><li>需要特殊接口对接的 <ul><li>比如 @Cache 注解依赖的 CacheService 接口，不过也是可以自己实现个接口的。</li><li>比如 序列化输出接口、后端视图渲染接口</li></ul></li><li>需要 AOP/IOC 控制或对接的 <ul><li>比如 @Tran 注解的事务控制，是需要适配对接的</li></ul></li></ul><h3 id="能提供更多的模板接口吗" tabindex="-1">能提供更多的模板接口吗？ <a class="header-anchor" href="#能提供更多的模板接口吗" aria-label="Permalink to &quot;能提供更多的模板接口吗？&quot;">​</a></h3><ul><li>比如 redis</li><li>比如 mongodb</li><li>比如 es</li></ul><p>这个事情，有好有坏。。。重要的坏处：将来不喜欢 solon 了，迁移起来麻烦。还不如直接使用框架再加个工具类。迁移时方便。。。所以，暂时不考虑这个事情</p><h3 id="有同行在外面适配了框架" tabindex="-1">有同行在外面适配了框架？ <a class="header-anchor" href="#有同行在外面适配了框架" aria-label="Permalink to &quot;有同行在外面适配了框架？&quot;">​</a></h3><p>欢迎这些同学来说明下，官网会增加相关使用说明页面。大家做个关联，共同就成新生成。</p>',8),o=[r];function s(n,d,h,c,_,u){return e(),i("div",null,o)}const f=a(t,[["render",s]]);export{m as __pageData,f as default};
