import{_ as a,v as e,b as o,R as l}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/常见问答/article-son/问题debug 模式与资源热更新.md","filePath":"markdown/学习/常见问答/article-son/问题debug 模式与资源热更新.md"}'),t={name:"markdown/学习/常见问答/article-son/问题debug 模式与资源热更新.md"},s=l('<p>如果是想要改了 java 代码，马上生效的。可以试试：IDEA 热加载插件 JRebel</p><h3 id="_1、如何启用-debug-模式" tabindex="-1">1、如何启用 debug 模式 <a class="header-anchor" href="#_1、如何启用-debug-模式" aria-label="Permalink to &quot;1、如何启用 debug 模式&quot;">​</a></h3><ul><li>增加程序启动参数可开启：</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">java -jar demo.jar --debug=1</span></span></code></pre></div><ul><li>或者，增加jvm参数：</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">java -Dsolon.debug=1 -jar demo.jar</span></span></code></pre></div><ul><li>或者，使用 solon-test 进行单元测试时，会自动启用 debug 模式</li><li>或者，在开发工具里配置启动参数 <code>--debug=1</code></li></ul><h3 id="_2、有哪些效果" tabindex="-1">2、有哪些效果 <a class="header-anchor" href="#_2、有哪些效果" aria-label="Permalink to &quot;2、有哪些效果&quot;">​</a></h3><p>| 范围 | 效果 | 补充 | | -------- | -------- | | 动态模板文件变更 | 动态更新（即马上见到效果） | | | 静态资源文件变更 | 动态更新（即马上见到效果） | | | 类代码变更 | / | 可借用 JRebel 实现类的动态更新 | | 属性配置文件 | 会有加载提示打印 | | | @ProxyComponent | 会有兼容警告打印 | | | @Dao | 会有兼容警告打印 | 建议统一改用 @ProxyComponent | | @Service | 会有兼容警告打印 | 建议统一改用 @ProxyComponent | | @Repository | 会有兼容警告打印 | 建议统一改用 @ProxyComponent | | solon.proxy 插件 | 会打印代理实现类名 | |</p><p>提示：有别的效果需要，可以提建议。</p><h3 id="_3、附带资料" tabindex="-1">3、附带资料 <a class="header-anchor" href="#_3、附带资料" aria-label="Permalink to &quot;3、附带资料&quot;">​</a></h3><ul><li><a href="/article/320.html">@Component 与 @ProxyComponent 的区别</a></li><li><a href="/article/442.html">动态代理的本质</a></li></ul>',12),n=[s];function r(i,d,p,c,u,_){return e(),o("div",null,n)}const b=a(t,[["render",r]]);export{m as __pageData,b as default};
