import{_ as o,v as e,b as t,R as l}from"./chunks/framework.caa0fbaf.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/特点/特点/article-son/与 RSocket 的区别.md","filePath":"markdown/特点/特点/article-son/与 RSocket 的区别.md"}'),n={name:"markdown/特点/特点/article-son/与 RSocket 的区别.md"},i=l('<p>Solon 与 RSocket 的比较，具体是指 Solon Remoting 与 Dubbo 的比较。Solon Remoting 包括有：</p><ul><li>Solon Remoting Rpc（与 Dubbo 类似）</li><li>Solon Remoting SocketD（本章比较的就是它）</li></ul><h3 id="_1、solon-remoting-socketd-与-rsocket-的相似点" tabindex="-1">1、Solon Remoting SocketD 与 RSocket 的相似点 <a class="header-anchor" href="#_1、solon-remoting-socketd-与-rsocket-的相似点" aria-label="Permalink to &quot;1、Solon Remoting SocketD 与 RSocket 的相似点&quot;">​</a></h3><p>特性：</p><ul><li>具有语言无关性的二进制通信协议</li><li>异步非阻塞消息驱动通信,高性能</li><li>实现了网络通信的背压处理，在此基础上进行流量控制、连接恢复</li><li>天然支持双向通信。如：单链接双向RPC</li><li>更加适合分布式通信场景</li></ul><p>三种交互：</p><ul><li>Send(msg)：只发送不响应。在不需要响应时非常有用，例如非关键事件日志记录。</li><li>SendAndResponse(msg)：发送并等待响应。类似Http的请求/响应模型。它是异步和多路复用的。</li><li>SendAndCallback(msg, (msg2)-&gt;{})：发送并在有响应时回调。类似Ajax异步回调。</li></ul><p>...</p><p>暂时参考 <a href="/article/188.html">Solon Remoting SockteD 开发</a>，其它待续</p>',9),a=[i];function s(c,r,m,d,p,S){return e(),t("div",null,a)}const R=o(n,[["render",s]]);export{k as __pageData,R as default};
