import{_ as a,v as e,b as o,R as t}from"./chunks/framework.caa0fbaf.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Data 开发/article-son/六、多数据源与动态、分片数据源.md","filePath":"markdown/学习/Solon Data 开发/article-son/六、多数据源与动态、分片数据源.md"}'),l={name:"markdown/学习/Solon Data 开发/article-son/六、多数据源与动态、分片数据源.md"},i=t('<h3 id="_1、确定几个概念" tabindex="-1">1、确定几个概念 <a class="header-anchor" href="#_1、确定几个概念" aria-label="Permalink to &quot;1、确定几个概念&quot;">​</a></h3><h4 id="固定单库数据源" tabindex="-1">固定单库数据源： <a class="header-anchor" href="#固定单库数据源" aria-label="Permalink to &quot;固定单库数据源：&quot;">​</a></h4><ul><li>是指1个数据源，内部不再有别的子数据源。是它就是它了</li><li>比如：HikariDataSource、DruidDataSource</li></ul><h4 id="固定分片数据源-内部多源-基于分片规则切换" tabindex="-1">固定分片数据源（内部多源，基于分片规则切换）： <a class="header-anchor" href="#固定分片数据源-内部多源-基于分片规则切换" aria-label="Permalink to &quot;固定分片数据源（内部多源，基于分片规则切换）：&quot;">​</a></h4><ul><li>是指1个数据源内有多个子数据源，根据规则确定相关数据源。一般用于分库分表或读写分离场景等。</li><li>比如：ShardingDataSource（基于 Apache ShardingSphere 适配的数据源）</li></ul><h4 id="动态数据源-内部多源-基于线程状态切换" tabindex="-1">动态数据源（内部多源，基于线程状态切换）： <a class="header-anchor" href="#动态数据源-内部多源-基于线程状态切换" aria-label="Permalink to &quot;动态数据源（内部多源，基于线程状态切换）：&quot;">​</a></h4><ul><li>是指1个数据源内有多个子数据源，且可以动态切换内部的子数据源。用时，需要不断手动指定。</li><li>比如：DynamicDataSource</li><li>一般通过：<code>@DynamicDs(&quot;db_user_1&quot;)</code>、<code>@DynamicDs(&quot;db_user_2&quot;)</code> 切换动态数据源内部的子数据源</li></ul><h4 id="多数据源" tabindex="-1">多数据源： <a class="header-anchor" href="#多数据源" aria-label="Permalink to &quot;多数据源：&quot;">​</a></h4><ul><li>即指有多个数据源（可以是固定数据源或动态数据源），且各不相关。</li><li>一般通过：<code>@Db(&quot;db_user&quot;)</code>、<code>@Db(&quot;db_order&quot;)</code> 确认1个数据源。</li></ul><h3 id="_2、具体参考" tabindex="-1">2、具体参考 <a class="header-anchor" href="#_2、具体参考" aria-label="Permalink to &quot;2、具体参考&quot;">​</a></h3><ul><li><a href="/article/352.html">生态 / solon.data.dynamicds</a></li><li><a href="/article/535.html">生态 / solon.data.shardingds</a></li></ul>',11),r=[i];function d(n,s,c,h,u,_){return e(),o("div",null,r)}const q=a(l,[["render",d]]);export{b as __pageData,q as default};
