import{_ as s,v as a,b as t,R as l}from"./chunks/framework.caa0fbaf.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Web 开发之 Servlet [不推荐]/article-son/一、Servlet 与 Solon 常见对象比较.md","filePath":"markdown/学习/Solon Web 开发之 Servlet [不推荐]/article-son/一、Servlet 与 Solon 常见对象比较.md"}'),n={name:"markdown/学习/Solon Web 开发之 Servlet [不推荐]/article-son/一、Servlet 与 Solon 常见对象比较.md"},o=l(`<h3 id="_1、常见对象比较" tabindex="-1">1、常见对象比较 <a class="header-anchor" href="#_1、常见对象比较" aria-label="Permalink to &quot;1、常见对象比较&quot;">​</a></h3><table><thead><tr><th>Solon 2.2.0</th><th>Servlet 4.0</th><th>说明</th></tr></thead><tbody><tr><td>Context</td><td>HttpServletRequest + HttpServletResponse</td><td>请求上下文</td></tr><tr><td>Handler</td><td>HttpServlet</td><td>请求处理</td></tr><tr><td>Filter</td><td>Filter</td><td>请求过滤器</td></tr><tr><td></td><td></td><td></td></tr><tr><td>SessionState</td><td>HttpSession</td><td>请求会话状态类</td></tr><tr><td></td><td></td><td></td></tr><tr><td>UploadedFile</td><td>MultipartFile</td><td>文件上传接收类</td></tr><tr><td>DownloadedFile</td><td>/</td><td>文件下载输出类</td></tr><tr><td>ModelAndView</td><td>/</td><td>模型视图输出类</td></tr></tbody></table><p>Solon 还提供了些简化接口，比如（ 更多可见：<a href="/article/216.html">认识请求上下文（Context）</a> ）：</p><table><thead><tr><th>接口</th><th>说明</th></tr></thead><tbody><tr><td>ctx.realIp()</td><td>获取用户端真实ip</td></tr><tr><td>ctx.paramAsInt(name)</td><td>获取请求参数，并转为 int 类型</td></tr><tr><td>ctx.file(name)</td><td>获取上传文件</td></tr><tr><td>ctx.outputAsJosn()</td><td>输出并做为 json 内容类型</td></tr></tbody></table><h3 id="_2、支持-servlet-接口的插件" tabindex="-1">2、支持 Servlet 接口的插件 <a class="header-anchor" href="#_2、支持-servlet-接口的插件" aria-label="Permalink to &quot;2、支持 Servlet 接口的插件&quot;">​</a></h3><p>目前适配有：jdkhttp、jlhttp、smarthttp、jetty、undertow 等 http 通讯容器。其中支持 Servlet 有：</p><ul><li>solon.boot.jetty</li><li>solon.boot.unertow</li></ul><p>更多可见：<a href="/article/family-solon-boot.html">生态 / Solon Boot</a></p><h3 id="_3、如何获得-servlet-常用接口" tabindex="-1">3、如何获得 Servlet 常用接口 <a class="header-anchor" href="#_3、如何获得-servlet-常用接口" aria-label="Permalink to &quot;3、如何获得 Servlet 常用接口&quot;">​</a></h3><p>框架在设计方面，是可以获取 context.request() 和 context.response() 对象的，只要类型能对上就可在 Mvc 里注入。所以可以通过参数注入，获得两个常用的 Servlet 对象：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoController</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>按框架设计角度，如果是 jdkhttp 可以获取：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoController</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpExchange</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">exch</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>如果是 jlkhttp 可以获取：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoController</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HTTPServer</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HTTPServer</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Response</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>但千万别这么干</strong> ！！！ 框架的设计是使用统一接口，从而自由切换不同的插件！！！</p>`,16),e=[o];function p(r,c,d,y,D,C){return a(),t("div",null,e)}const F=s(n,[["render",p]]);export{A as __pageData,F as default};
