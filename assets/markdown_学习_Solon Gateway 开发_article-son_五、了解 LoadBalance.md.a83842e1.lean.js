import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Gateway 开发/article-son/五、了解 LoadBalance.md","filePath":"markdown/学习/Solon Gateway 开发/article-son/五、了解 LoadBalance.md"}'),o={name:"markdown/学习/Solon Gateway 开发/article-son/五、了解 LoadBalance.md"},p=l(`<p>上一文的代码 <code>HttpUtils.http(sevName, ctx.path())</code> （来自 &quot;solon.cloud.httputils&quot; 插件的工具类），内部是通过 sevName 获取对应服务负载均衡，并最终获取服务实例地址。内部接口调用：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//根据服务名获取“负载均衡”</span></span>
<span class="line"><span style="color:#C792EA;">LoadBalance</span><span style="color:#A6ACCD;"> loadBalance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LoadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sevName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//根据分组和服务名获取“负载均衡”</span></span>
<span class="line"><span style="color:#C792EA;">LoadBalance</span><span style="color:#A6ACCD;"> loadBalance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LoadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">groupName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sevName</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>负载均衡是 Rpc 开发和服务集群调用时，必不可少的元素。</p><h3 id="_1、了解负载均衡" tabindex="-1">1、了解负载均衡 <a class="header-anchor" href="#_1、了解负载均衡" aria-label="Permalink to &quot;1、了解负载均衡&quot;">​</a></h3><p>内核层面提供了两个接口。插件中 “solon.cloud.httputils”，“nami” 都是使用它们对服务进行调用：</p><table><thead><tr><th>接口</th><th>说明</th></tr></thead><tbody><tr><td>LoadBalance</td><td>负载均衡接口</td></tr><tr><td>LoadBalance.Factory</td><td>负载均衡工厂接口</td></tr></tbody></table><p>要获取一个服务的实例地址，只需要使用（在定制开发时，可能用得着）：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//开发时要注意不存在服务的可能</span></span>
<span class="line"><span style="color:#C792EA;">LoadBalance</span><span style="color:#A6ACCD;"> loadBalance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LoadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sevName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//输出的结果，例：&quot;http://12.0.1.2.3:8871&quot; 、&quot;ws://120.1.1.2:9871&quot;（协议头://地址:端口）</span></span>
<span class="line"><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> loadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getServer</span><span style="color:#89DDFF;">();</span></span></code></pre></div><h3 id="_2、负载均衡的能力实现" tabindex="-1">2、负载均衡的能力实现 <a class="header-anchor" href="#_2、负载均衡的能力实现" aria-label="Permalink to &quot;2、负载均衡的能力实现&quot;">​</a></h3><p>已有的实现方案是：&quot;solon.cloud&quot; 插件的 CloudLoadBalanceFactory。实现是无感知的，且是动态更新了（一般是实时或延时几秒）。引入 <a href="/article/369.html">Solon Cloud Discovery</a> 相关的组件，即可使用。</p><p>还可以根据需要，进行微略调整（一般没啥必要）:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CloudLoadStrategy</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadStrategy</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CloudLoadStrategyDefault</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//默认为轮询</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//return new CloudLoadStrategyIpHash(); //ip希哈</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>更多的策略，可以自己定义。比如在 k8s 里直接使用 k8s sev 地址：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//关于策略自定义，v2.2.6 后支持</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CloudLoadStrategyImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CloudLoadStrategy</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getServer</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Discovery</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">discovery</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//即通过服务名，获取k8s的服务地址</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> K8sUtil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getServer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">discovery</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">service</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_3、自定义负载均衡实现" tabindex="-1">3、自定义负载均衡实现 <a class="header-anchor" href="#_3、自定义负载均衡实现" aria-label="Permalink to &quot;3、自定义负载均衡实现&quot;">​</a></h3><ul><li>基于内核接口 &quot;LoadBalance.Factory&quot; 实现（一般是没必要自己搞）</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//只是示意一下 //具体可以参考 CloudLoadBalanceFactory 实现</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoadBalanceFactoryImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Factory</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">LoadBalance</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">group</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">service</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">local</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">service</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LoadBalanceImpl</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//只是示意一下 //具体可以参考 CloudLoadBalance 实现</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoadBalanceImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoadBalance</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getServer</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://127.0.0.1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>基于 “Solon Cloud Discovery” 接口实现</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//找一个 Solon Cloud Discovery 适配插件参考下</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CloudDiscoveryServiceImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CloudDiscoveryService</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,19),e=[p];function t(c,r,y,C,D,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
