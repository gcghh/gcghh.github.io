import{_ as l,v as o,b as i,R as e}from"./chunks/framework.caa0fbaf.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/常见问答/article-son/问题升级到 v2x 版本的注意事项.md","filePath":"markdown/学习/常见问答/article-son/问题升级到 v2x 版本的注意事项.md"}'),n={name:"markdown/学习/常见问答/article-son/问题升级到 v2x 版本的注意事项.md"},t=e('<p><mark>预告：Solon 2.0.0 版本，计划 2023年2月2日发布！</mark>新年新气象，新年新成长：）</p><h3 id="_1、纪年" tabindex="-1">1、纪年 <a class="header-anchor" href="#_1、纪年" aria-label="Permalink to &quot;1、纪年&quot;">​</a></h3><ul><li>v0: 2018 ~ 2019 (2y)</li><li>v1: 2020 ~ 2022 (3y)</li><li>v2: 2023 ~</li></ul><h3 id="_2、v1-x-升到-v2-x-提醒" tabindex="-1">2、v1.x 升到 v2.x 提醒 <a class="header-anchor" href="#_2、v1-x-升到-v2-x-提醒" aria-label="Permalink to &quot;2、v1.x 升到 v2.x 提醒&quot;">​</a></h3><p>v2.x 的六点规划，其中四点已经在v1.x完成了（为了过度更自然）。升级是个自然的过程，只是删除了v1.x积累的弃用代码；以干净的资态，迎接新的进化。具体升级，可能会有“显示”的编译错误，调整部分代码即可：</p><ul><li>提醒1：之前没有使用弃用接口的，可以直接升级 <br></li><li>提醒2：有使用弃用接口的。建议先升级到 1.12.4；替换弃用代码后，再升级到 2.0.0（也可以直接升级，按编译错误提示修改）</li></ul><p>v2.x 未完成的二点规划：</p><ul><li>提供便利的AOT编译帮助</li><li>增加响应式支持（在原有体验不变的情况下）</li></ul><h3 id="_3、v2-0-0-主要删除弃用代码" tabindex="-1">3、v2.0.0 （主要删除弃用代码） <a class="header-anchor" href="#_3、v2-0-0-主要删除弃用代码" aria-label="Permalink to &quot;3、v2.0.0 （主要删除弃用代码）&quot;">​</a></h3><p>打磨多年，总会有早期想不周到的地方。（像修仙小说那样，升个大级）去除杂质，全新进化：</p><ul><li>调整 solon// <ul><li>删除 Aop；由 Solon.context() 替代</li><li>删除 Bean:attr，Component:attr</li><li>删除 BeanLoadEndEvent，PluginLoadEndEvent；由 AppBeanLoadEndEvent，AppPluginLoadEndEvent 替代</li><li>删除 Utils.parallel()...等几个弃用接口；由 RunUtil 替代</li><li>删除 Solon.global()；由 Solon.app() 替代</li><li>删除 SolonApp::port()；由 Solon.cfg().serverPort() 替代</li><li>删除 SolonApp::enableSafeStop()；由 Solon.cfg().enableSafeStop() 替代</li><li>删除 AopContext::getProps()；由 ::cfg() 替代</li><li>删除 AopContext::getWrapAsyn()；由 ::getWrapAsync() 替代</li><li>删除 AopContext::subWrap()；由 ::subWrapsOfType() 替代</li><li>删除 AopContext::subBean()；由 ::subBeansOfType() 替代</li><li>删除 AopContext::getBeanAsyn()；由::getBeanAsync() 替代</li><li>删除 Solon.cfg().version()；由 Solon.version() 替代</li><li>删除 EventBus::pushAsyn()；由 pushAsync() 替代</li><li>删除 PrintUtil::debug()，::info() 等...；由 LogUtil 替代</li><li>删除 @Mapping::before,after,index 属性；由 @Before,@After 或 RouterInterceptor 或 Solon.app().before(),after() 替代</li><li>删除 &quot;solon.profiles.active&quot; 应用配置（只在某版临时出现过）；由 &quot;solon.env&quot; 替代</li><li>删除 &quot;solon.extend.config&quot; 应用配置（只在某版临时出现过）；由 &quot;solon.config&quot; 替代</li><li>删除 &quot;solon.encoding.request&quot; 应用配置（只在某版临时出现过）；由 &quot;server.request.encoding&quot; 替代</li><li>删除 &quot;solon.encoding.response&quot; 应用配置（只在某版临时出现过）；由 &quot;server.request.response&quot; 替代</li><li><ul><li></li></ul></li><li>调整 DownloadedFile，UploadedFile 字段改为私有；由属性替代</li></ul></li><li>调整 solon.i18n// <ul><li>删除 I18nBundle::toMap()；由 ::toProp() 替代</li></ul></li><li>调整 solon.web.cors// <ul><li>删除 ..extend.cores 包；由 ..web.cors 包替代</li></ul></li><li>调整 solon.web.staticfiles// <ul><li>删除 StaticMappings::add(string1,bool2,repository3) 接口；由 StaticMappings::add(string1,repository2) 替代</li><li>说明 string1 ，有&#39;/&#39;结尾表示目录，无&#39;/&#39;结尾表示单文件</li></ul></li><li>调整 solon.cloud// <ul><li>删除 Media::bodyAsByts()..；由 ::bodyAsBytes() 替代</li></ul></li><li>调整 solon.cloud.httputils// <ul><li>删除 cloud.HttpUtils::asShortHttp()..；由 ::timeout() 替代</li></ul></li><li>调整 solon.test// <ul><li>删除 test.HttpUtils::exec2()..；由 ::execAsCode()..替代</li><li>删除 @Rollback；由 @TestRollback 替代</li></ul></li><li>调整 solon.boot// <ul><li>删除 SessionStateBase/cookie[SOLONID2]</li></ul></li><li>调整 mybatis-solon-plugin// <ul><li>删除 org.apache.ibatis.ext.solon.Db；由 ..solon.annotation.Db 替代</li></ul></li><li>调整 beetlsql-solon-plugin// <ul><li>删除 org.beetl.sql.ext.solon.Db；由 ..solon.annotation.Db 替代</li></ul></li><li>调整 sa-token-solon-plugin// <ul><li>删除 SaTokenPathFilter 类，由 SaTokenFilter 替代</li><li>删除 SaTokenPathInterceptor 类，由 SaTokenInterceptor 替代</li></ul></li><li>删除插件 httputils-solon-cloud-plugin；由 solon.cloud.httputils 替代</li><li>删除插件 solon.extend.stop；由 solon.web.stop 替代</li><li>删除插件 solon.extend.async；由 solon.scheduling 替代</li><li>删除插件 solon.schedule；由 solon.scheduling.simple 替代</li><li>删除插件 solon.extend.retry</li><li>删除插件 solon.extend.jsr330</li><li>删除插件 solon.extend.jsr303</li><li>删除插件 solon.logging.impl；由 solon.logging.simple 替代</li><li><ul><li></li></ul></li><li>新增插件 powerjob-solon-plugin</li><li>新增插件 powerjob-solon-cloud-plugin（支持 solon cloud job 标准）</li><li><ul><li></li></ul></li><li>调整 solon.scheduling/JobManger 添加更多注册时检测</li><li>调整 solon.banner/banner.txt 自定义默认机制</li><li>调整 sa-token-solon-plugin/isPrint 处理机制</li><li>调整 sa-token-solon-plugin 增加对 sso,oauth2 两模块的适配</li><li>调整 nami 添加 ContentTypes 类，提供便利的 content-type 常量</li></ul>',11),s=[t];function a(r,u,p,d,c,g){return o(),i("div",null,s)}const v=l(n,[["render",a]]);export{x as __pageData,v as default};
