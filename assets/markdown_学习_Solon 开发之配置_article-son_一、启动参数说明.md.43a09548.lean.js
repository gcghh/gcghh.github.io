import{_ as t,v as d,b as o,R as e}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之配置/article-son/一、启动参数说明.md","filePath":"markdown/学习/Solon 开发之配置/article-son/一、启动参数说明.md"}'),a={name:"markdown/学习/Solon 开发之配置/article-son/一、启动参数说明.md"},r=e('<p>启动参数，在应用启动后会被静态化（为了内部更高效的利用）。即，启动后是不能再修改。</p><h3 id="_1、启动参数" tabindex="-1">1、启动参数 <a class="header-anchor" href="#_1、启动参数" aria-label="Permalink to &quot;1、启动参数&quot;">​</a></h3><table><thead><tr><th>启动参数</th><th>对应的应用配置</th><th>描述</th></tr></thead><tbody><tr><td>--env</td><td>solon.env</td><td>环境（可用于内部配置切换）</td></tr><tr><td>--debug</td><td>solon.debug</td><td><mark>调试模式（0或1）</mark></td></tr><tr><td>--setup</td><td>solon.setup</td><td>安装模式（0或1）</td></tr><tr><td>--white</td><td>solon.white</td><td>白名单模式（0或1）</td></tr><tr><td>--drift</td><td>solon.drift</td><td>漂移模式，部署到k8s的服务要设为 1（0或1）</td></tr><tr><td>--alone</td><td>solon.alone</td><td>单体模式（0或1）</td></tr><tr><td>--extend</td><td>solon.extend</td><td>扩展目录</td></tr><tr><td>--locale</td><td>solon.locale</td><td>默认地区</td></tr><tr><td>--config.add</td><td>solon.config.add</td><td>增加外部配置（./app.yml）</td></tr><tr><td>--app.name</td><td>solon.app.name</td><td>应用名</td></tr><tr><td>--app.group</td><td>solon.app.group</td><td>应用分组</td></tr><tr><td>--app.title</td><td>solon.app.title</td><td>应用标题</td></tr><tr><td>--stop.safe</td><td>solon.stop.safe</td><td>安全停止（0或1）//（v2.1.0 后支持；之前只能用接口启用）</td></tr><tr><td>--stop.delay</td><td>solon.stop.delay</td><td>安全停止的延时秒数（默认10秒）</td></tr></tbody></table><p>启动参数应用：<code>java -jar demo.jar --env=dev --drift=1</code></p><p>系统配置应用：<code>java -Dsolon.env=dev -jar demo.jar</code></p><h3 id="_2、启动参数的扩展特性" tabindex="-1">2、启动参数的扩展特性 <a class="header-anchor" href="#_2、启动参数的扩展特性" aria-label="Permalink to &quot;2、启动参数的扩展特性&quot;">​</a></h3><p>所有带&quot;.&quot;的启动参数，同时会成为应用配置。以下三个配置效果相同：</p><ul><li><code>java -Dsolon.env=dev -jar demo.jar</code></li><li><code>java -jar demo.jar --solon.env=dev</code></li><li><code>java -jar demo.jar --env=dev</code></li></ul><p>以下两个配置效果也相同：</p><ul><li><code>java -Dserver.port=8081 -jar demo.jar</code></li><li><code>java -jar demo.jar --server.port=8081</code></li></ul>',10),l=[r];function n(s,p,i,c,_,h){return d(),o("div",null,l)}const j=t(a,[["render",n]]);export{m as __pageData,j as default};
