import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之插件/article-son/四、插件热插拔管理机制（H-Spi）.md","filePath":"markdown/学习/Solon 开发之插件/article-son/四、插件热插拔管理机制（H-Spi）.md"}'),p={name:"markdown/学习/Solon 开发之插件/article-son/四、插件热插拔管理机制（H-Spi）.md"},o=l(`<p>插件热插拔管理机制，简称：H-Spi。是框架提供的生产时用的另一种高级扩展方案。相对E-Spi，H-Spi 更侧重隔离、热插热拔、及管理性。</p><p>应用时，是以一个业务模块为单位进行开发，且封装为一个独立插件包。</p><h3 id="_1、特点说明" tabindex="-1">1、特点说明 <a class="header-anchor" href="#_1、特点说明" aria-label="Permalink to &quot;1、特点说明&quot;">​</a></h3><ul><li>所有插件包独享 ClassLoader、AopContext、配置；完全隔离 <ul><li>可通过 Solon.app(), Solon.cfg(), Solon.context() 等...手动获取主程序或全局的资源</li></ul></li><li>模块可以打包成一个独立的插件包（放在体外加载），也可以与主程序一起打包。“分”或“合”也是自由！</li><li>更新插件包，不需要重启主服务。热更新！</li><li>开发时，所有资源完全独立自控。且必须完成资源移除的任务</li><li>模块之间的通讯，尽量交由事件总线（EventBus）处理。且尽量用弱类型的事件数据（如Map，或 JsonString）</li><li>主程序需要引入 &quot;<a href="/article/273.html">solon.hotplug</a>&quot; 依赖，对业务插件包进行管理</li></ul><h3 id="_2、关于-classloader-隔离" tabindex="-1">2、关于 ClassLoader 隔离 <a class="header-anchor" href="#_2、关于-classloader-隔离" aria-label="Permalink to &quot;2、关于 ClassLoader 隔离&quot;">​</a></h3><p>在 ClassLoader 隔离下，开发业务是比较麻烦的。注意：</p><ul><li>父级 ClassLoader （一般，公共资源放这里） <ul><li>可以获取并使用它的类或资源</li><li>如果有东西注册，在插件 stop 事件里要注销掉</li></ul></li><li>同级 ClassLoader</li><li>不要有显示类的交互</li><li>一般通过事件总线进行交互 <ul><li>交互的数据一般用父级 ClassLoader 的实体类</li><li>或者用弱类型的数据，如 json（像使用远程接口那样对待）</li></ul></li></ul><p>尽量让插件之间，相互比较独立，不需要什么交互（或少量使用事件总线交互）</p><h3 id="_3、插件开发注意示例" tabindex="-1">3、插件开发注意示例 <a class="header-anchor" href="#_3、插件开发注意示例" aria-label="Permalink to &quot;3、插件开发注意示例&quot;">​</a></h3><ul><li>插件在“启动”时添加到公共场所的资源或对象，必须在插件停止时须移除掉（为了能热更新）：</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin1Impl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">AopContext</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">StaticRepository</span><span style="color:#A6ACCD;"> staticRepository</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AopContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//添加自己的配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">        context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cfg</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">loadAdd</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo1011.plugin1.yml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//扫描自己的bean</span></span>
<span class="line"><span style="color:#A6ACCD;">        context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">beanScan</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Plugin1Impl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//添加自己的静态文件仓库（注册classloader）</span></span>
<span class="line"><span style="color:#A6ACCD;">        staticRepository </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClassPathStaticRepository</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClassLoader</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugin1_static</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        StaticMappings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/html/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> staticRepository</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stop</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//移除http处理。//用前缀，方便移除</span></span>
<span class="line"><span style="color:#A6ACCD;">        Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">router</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//移除定时任务（如果有定时任务，选支持手动移除的方案）</span></span>
<span class="line"><span style="color:#A6ACCD;">        JobManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">job1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//移除事件订阅</span></span>
<span class="line"><span style="color:#A6ACCD;">        context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">beanForeach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bw </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">raw</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> EventListener</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                EventBus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unsubscribe</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">raw</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//移除静态文件仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">        StaticMappings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">staticRepository</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>一些涉及 classloader 的相关细节，需要多多注意。比如后端模板的渲染：</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseController</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Render</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//要考虑模板所在的classloader</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">FreemarkerRender</span><span style="color:#A6ACCD;"> viewRender </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FreemarkerRender</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">BaseController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClassLoader</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Context</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> Throwable</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Throwable</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> ModelAndView</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            viewRender</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>更多细节，需要根据业务情况多多注意。</li></ul><h3 id="_4、插件管理" tabindex="-1">4、插件管理 <a class="header-anchor" href="#_4、插件管理" aria-label="Permalink to &quot;4、插件管理&quot;">​</a></h3><p>插件有管理能力后，还可以仓库化，平台化。详见：<a href="/article/273.html">《生态 / Solon / solon.hotplug》</a></p>`,16),e=[o];function t(c,r,D,y,F,A){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
