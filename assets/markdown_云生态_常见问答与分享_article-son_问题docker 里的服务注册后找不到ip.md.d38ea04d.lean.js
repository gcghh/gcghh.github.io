import{_ as s,v as a,b as n,R as p}from"./chunks/framework.caa0fbaf.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/云生态/常见问答与分享/article-son/问题docker 里的服务注册后找不到ip.md","filePath":"markdown/云生态/常见问答与分享/article-son/问题docker 里的服务注册后找不到ip.md"}'),o={name:"markdown/云生态/常见问答与分享/article-son/问题docker 里的服务注册后找不到ip.md"},l=p(`<p>docker 里的服务，如果向外部的中间件进行服务注册。默认情况下，使用的是 docker 内部的 ip，外部的服务无法访问其 ip。</p><h4 id="_1、使用包装器配置" tabindex="-1">1、使用包装器配置 <a class="header-anchor" href="#_1、使用包装器配置" aria-label="Permalink to &quot;1、使用包装器配置&quot;">​</a></h4><p>此时，需要借用包装器配置。docker 相当于是服务的包装器，有自己的宿主ip和port：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">server.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.10.12.7</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>有此配置后，服务注册时（以及别的与外部服务交互的设定）会使用包装器的 ip 和 prot。外部的服务即可访问到了。</p><h4 id="_2、更多包装器配置" tabindex="-1">2、更多包装器配置 <a class="header-anchor" href="#_2、更多包装器配置" aria-label="Permalink to &quot;2、更多包装器配置&quot;">​</a></h4><p>如果有多种通讯信号，可以按不同信号配置：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">server.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.10.12.7</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#//或者具体信号分别指定</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">server.http.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.10.12.7</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">server.socket.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8180</span></span>
<span class="line"><span style="color:#F07178;">server.socket.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.10.12.7</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">server.websocket.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8280</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.10.12.7</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div>`,8),e=[l];function t(r,c,y,i,D,F){return a(),n("div",null,e)}const _=s(o,[["render",t]]);export{d as __pageData,_ as default};
