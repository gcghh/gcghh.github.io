import{_ as s,v as n,b as t,R as a}from"./chunks/framework.caa0fbaf.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/生态/Solon/article-son/solonextendjsr330 [删除].md","filePath":"markdown/生态/Solon/article-son/solonextendjsr330 [删除].md"}'),o={name:"markdown/生态/Solon/article-son/solonextendjsr330 [删除].md"},l=a(`<div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.noear</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">solon.extend.jsr330</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_1、描述" tabindex="-1">1、描述 <a class="header-anchor" href="#_1、描述" aria-label="Permalink to &quot;1、描述&quot;">​</a></h4><p>基础扩展插件，为 Solon 提供 jsr 330 标准的注解支持 。主要涉及注解：</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Named</td><td>相当于 Solon 的 @Component</td></tr><tr><td>@Inject</td><td>相当于 Solon 的 @Inject</td></tr><tr><td>@Singleton</td><td>相当于 Solon 的 @Singleton(true)，但Solon默认的就是单例</td></tr></tbody></table><p>可为 jsr 330 标准的代码，迁入更方便。</p>`,5),e=[l];function p(r,c,d,i,F,D){return n(),t("div",null,e)}const h=s(o,[["render",p]]);export{_ as __pageData,h as default};
