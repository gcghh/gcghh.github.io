import{_ as o,v as t,b as l,F as e}from"./chunks/framework.caa0fbaf.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Web 开发之 Servlet [不推荐]/Solon Web 开发之 Servlet [不推荐].md","filePath":"markdown/学习/Solon Web 开发之 Servlet [不推荐]/Solon Web 开发之 Servlet [不推荐].md"}'),n={name:"markdown/学习/Solon Web 开发之 Servlet [不推荐]/Solon Web 开发之 Servlet [不推荐].md"},s=e("p",null,"总会有些老的项目或者某些框架，必须使用 Servlet 的接口。。。Solon 对这种项目，也提供了良好的支持。",-1),r=e("p",null,"当需要 Servlet 接口时，需要使用插件：",-1),_=e("ul",null,[e("li",null,"或者 solon.boot.jetty"),e("li",null,"或者 solon.boot.undertow")],-1),a=e("p",null,"这块内容，也有助于用户了解 Solon 与 Servlet 的接口关系。Solon 有自己的 Context + Handler 接口设计，通过它以适配 Servlet 和 Not Servlet 的 http server，以及 websocket, socket（以实现三源合一的目的）：",-1),S=e("ul",null,[e("li",null,"其中 solon.web.servlet ，专门用于适配 Servlet 接口。")],-1),d=[s,r,_,a,S];function c(i,v,u,p,b,h){return t(),l("div",null,d)}const W=o(n,[["render",c]]);export{f as __pageData,W as default};
