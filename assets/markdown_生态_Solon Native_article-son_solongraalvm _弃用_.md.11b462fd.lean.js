import{_ as a,v as s,b as l,R as e}from"./chunks/framework.caa0fbaf.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/生态/Solon Native/article-son/solongraalvm [弃用].md","filePath":"markdown/生态/Solon Native/article-son/solongraalvm [弃用].md"}'),n={name:"markdown/生态/Solon Native/article-son/solongraalvm [弃用].md"},o=e(`<p><mark>此插件，由社区成员（馒头虫/飘虫）贡献</mark></p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.noear</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">solon.graalvm</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_1、描述" tabindex="-1">1、描述 <a class="header-anchor" href="#_1、描述" aria-label="Permalink to &quot;1、描述&quot;">​</a></h4><p>基础扩展插件，提供 Graalvm Native 打包支持。打包时，请：<a href="/article/306.html">《使用 maven-assembly-plugin 打胖包》</a></p><h4 id="_2、原生打包指导原则" tabindex="-1">2、原生打包指导原则 <a class="header-anchor" href="#_2、原生打包指导原则" aria-label="Permalink to &quot;2、原生打包指导原则&quot;">​</a></h4><ul><li>要去掉字节码生成类的依赖</li><li>要去掉动态Java编译的依赖</li></ul><p>需引入 “solon.proxy.apt”，用 apt 代理实现默认的 asm 代理实现。</p><h4 id="_3、相关探索" tabindex="-1">3、相关探索 <a class="header-anchor" href="#_3、相关探索" aria-label="Permalink to &quot;3、相关探索&quot;">​</a></h4><ul><li><a href="https://www.jianshu.com/p/f1da836fb4d6" target="_blank" rel="noreferrer">《Java运行包精简探索(一)》</a></li><li><a href="https://www.jianshu.com/p/5e3b1913cf3b" target="_blank" rel="noreferrer">《Java运行包精简探索(二)》</a></li><li><a href="https://www.jianshu.com/p/f78a016b30fe" target="_blank" rel="noreferrer">《Java运行包精简探索(三)(graalvm)》</a></li></ul><h4 id="_4、应用示例" tabindex="-1">4、应用示例 <a class="header-anchor" href="#_4、应用示例" aria-label="Permalink to &quot;4、应用示例&quot;">​</a></h4><p><a href="https://gitee.com/mantouchong/solondemo" target="_blank" rel="noreferrer">https://gitee.com/mantouchong/solondemo</a></p>`,11),t=[o];function r(p,c,i,h,d,m){return s(),l("div",null,t)}const g=a(n,[["render",r]]);export{F as __pageData,g as default};
