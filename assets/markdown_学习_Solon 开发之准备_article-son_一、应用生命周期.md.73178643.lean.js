import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之准备/article-son/一、应用生命周期.md","filePath":"markdown/学习/Solon 开发之准备/article-son/一、应用生命周期.md"}'),p={name:"markdown/学习/Solon 开发之准备/article-son/一、应用生命周期.md"},o=l(`<p>应用生命周期包括：一个初始化函数时机点 + 六个应用事件时机点 + 三个插件生命时机点 + 两个容器生命时机点（v2.2.0 版本的状态）：</p><img src="https://solon.noear.org/img/9d65c1f7bb72475cbe4c34cd44182836.jpg" width="723"><p>重要提醒：</p><ul><li>启动过程完成后，项目才能正常运行（启动过程中，不能把线程卡死了）</li><li>AppBeanLoadEndEvent 之前的事件，需要启动前完成订阅！！！（否则，时机错过了）</li></ul><h3 id="_1、一个初始化函数时机点" tabindex="-1">1、一个初始化函数时机点 <a class="header-anchor" href="#_1、一个初始化函数时机点" aria-label="Permalink to &quot;1、一个初始化函数时机点&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SolonMain</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">-&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//应用初始化时间点</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2、六个应用事件时机点" tabindex="-1">2、六个应用事件时机点 <a class="header-anchor" href="#_2、六个应用事件时机点" aria-label="Permalink to &quot;2、六个应用事件时机点&quot;">​</a></h3><h4 id="事件说明" tabindex="-1">事件说明 <a class="header-anchor" href="#事件说明" aria-label="Permalink to &quot;事件说明&quot;">​</a></h4><table><thead><tr><th>事件</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>6.AppInitEndEvent</td><td>应用初始化完成事件</td><td>只支持手动订阅</td></tr><tr><td>8.AppPluginLoadEndEvent</td><td>应用插件加载完成事件</td><td>只支持手动订阅</td></tr><tr><td>b.AppBeanLoadEndEvent</td><td>应用Bean加载完成事件（即扫描完成）</td><td></td></tr><tr><td>e.AppLoadEndEvent</td><td>应用加载完成事件</td><td></td></tr><tr><td></td><td>::运行</td><td></td></tr><tr><td>g.AppPrestopEndEvent</td><td>应用预停止事件</td><td></td></tr><tr><td>j.AppStopEndEvent</td><td>应用停止事件</td><td></td></tr></tbody></table><h4 id="事件订阅示例" tabindex="-1">事件订阅示例 <a class="header-anchor" href="#事件订阅示例" aria-label="Permalink to &quot;事件订阅示例&quot;">​</a></h4><ul><li>AppInitEndEvent (时机点“b”之前的事件需要手动订阅)</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SolonMain</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 借用 SolonBuilder 手动订阅 //或者用 EventBus.subscribe 手动订阅</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SolonBuilder</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">onAppInitEnd</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#C792EA;">-&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">}).</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>AppLoadEndEvent</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">AppLoadEndEventListener</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventListener</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">AppLoadEndEvent</span><span style="color:#89DDFF;">&gt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onEvent</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AppLoadEndEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//event.app(); //获取应用对象</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>AppStopEndEvent，v2.1.0 后支持</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">AppStopEndEventListener</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EventListener</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">AppStopEndEvent</span><span style="color:#89DDFF;">&gt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onEvent</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AppStopEndEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//event.app(); //获取应用对象</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_3、三个插件生命时机点" tabindex="-1">3、三个插件生命时机点 <a class="header-anchor" href="#_3、三个插件生命时机点" aria-label="Permalink to &quot;3、三个插件生命时机点&quot;">​</a></h3><p>插件的本质，即在应用生命周期中获得关键执行时机的接口。从而有效获得应用扩展能力。</p><ul><li>插件接口 Plugin</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">FunctionalInterface</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AopContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">prestop</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stop</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>执行时机</li></ul><table><thead><tr><th>接口</th><th>执行时机</th><th>说明</th></tr></thead><tbody><tr><td>7.start</td><td>在应用初始化完成后执行</td><td>启动</td></tr><tr><td>f.prestop</td><td>在 ::stop 前执行</td><td>预停止</td></tr><tr><td>h.stop</td><td>在 Solon::stop 时执行</td><td>停止（启用安全停止时，prestop 后等几秒再执行 stop）</td></tr></tbody></table><h3 id="_4、两个容器生命时机点" tabindex="-1">4、两个容器生命时机点 <a class="header-anchor" href="#_4、两个容器生命时机点" aria-label="Permalink to &quot;4、两个容器生命时机点&quot;">​</a></h3><table><thead><tr><th>接口</th><th>执行时机</th><th>说明</th></tr></thead><tbody><tr><td>d.start</td><td>在扫描完成之后执行</td><td>启动</td></tr><tr><td>i.stop</td><td>在 Solon::stop 时执行，在插件（h.stop）后执行</td><td>停止</td></tr></tbody></table>`,24),t=[o];function e(r,c,A,y,C,D){return a(),n("div",null,t)}const F=s(p,[["render",e]]);export{d as __pageData,F as default};
