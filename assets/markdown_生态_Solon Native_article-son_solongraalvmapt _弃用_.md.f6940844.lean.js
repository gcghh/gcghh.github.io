import{_ as a,v as s,b as o,R as l}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/生态/Solon Native/article-son/solongraalvmapt [弃用].md","filePath":"markdown/生态/Solon Native/article-son/solongraalvmapt [弃用].md"}'),n={name:"markdown/生态/Solon Native/article-son/solongraalvmapt [弃用].md"},p=l(`<div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.noear</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">solon.graalvm.apt</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">provided</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_1、描述" tabindex="-1">1、描述 <a class="header-anchor" href="#_1、描述" aria-label="Permalink to &quot;1、描述&quot;">​</a></h4><p>基础扩展插件，为 Solon 在 Graalvm Native 打包时，自动生成元信息配置 。此插件在使用时，需要添加 <code>&lt;scope&gt;provided&lt;/scope&gt;</code>。</p><p>目前处于预览状态，暂时只能玩玩。具体发布之后 Graalvm Native 打包操作为：</p><ul><li>maven:package （即正常的打包）</li><li>native:compile-no-fork （执行 Native 插件的动作）</li></ul><p>完工。（如果有隐式的反射操作，还需要手动追加配置）</p><h4 id="_2、代码应用" tabindex="-1">2、代码应用 <a class="header-anchor" href="#_2、代码应用" aria-label="Permalink to &quot;2、代码应用&quot;">​</a></h4><p>在主模块里（即要打包成 jar 的模块里）添加 <code>solon.graalvm.apt</code> 插件，正常编译打包即可。就像 <code>lombok</code> 那样使用。</p><p>原则上没必要特意使用，有 graalvm native 打包需求时使用即可。</p>`,9),t=[p];function e(r,c,i,d,F,D){return s(),o("div",null,t)}const g=a(n,[["render",e]]);export{m as __pageData,g as default};
