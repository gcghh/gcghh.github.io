import{_ as s,v as a,b as l,R as n}from"./chunks/framework.caa0fbaf.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Logging 开发/article-son/如果有 Slf4j 接口 v2x 与 v1x 冲突.md","filePath":"markdown/学习/Solon Logging 开发/article-son/如果有 Slf4j 接口 v2x 与 v1x 冲突.md"}'),o={name:"markdown/学习/Solon Logging 开发/article-son/如果有 Slf4j 接口 v2x 与 v1x 冲突.md"},p=n(`<p>Solon v2.3.0 起切到 slf4j v2.x，但有些第三方包引用的是 v1.x。可能会存在冲突。</p><h3 id="_1、解决方案" tabindex="-1">1、解决方案 <a class="header-anchor" href="#_1、解决方案" aria-label="Permalink to &quot;1、解决方案&quot;">​</a></h3><ul><li>或者，在项目的 pom.xml 开头引入 v2.x （借用 maven 依赖顺序原则）</li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.slf4j</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">slf4j-api</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.0.7</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li>或者，使用 solon-parent 的，在项目的 pom.xml 开头引入 （借用 maven 依赖顺序原则）</li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.slf4j</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">slf4j-api</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">\${slf4j.version}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li>或者，排除掉 v1.x 的包</li></ul><p>找到 v1.x 的包，可能会有点小麻烦</p><h3 id="_2、了解-maven-依赖顺序原则" tabindex="-1">2、了解 maven 依赖顺序原则 <a class="header-anchor" href="#_2、了解-maven-依赖顺序原则" aria-label="Permalink to &quot;2、了解 maven 依赖顺序原则&quot;">​</a></h3><ul><li>pom文件中申明顺序优先</li><li>间接依赖路径最短优先</li></ul>`,10),t=[p];function e(r,c,F,D,i,y){return a(),l("div",null,t)}const v=s(o,[["render",e]]);export{g as __pageData,v as default};
