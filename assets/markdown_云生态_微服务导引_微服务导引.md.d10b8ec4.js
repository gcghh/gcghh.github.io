import{_ as i,v as l,b as t,R as s}from"./chunks/framework.caa0fbaf.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/云生态/微服务导引/微服务导引.md","filePath":"markdown/云生态/微服务导引/微服务导引.md"}'),e={name:"markdown/云生态/微服务导引/微服务导引.md"},a=s('<p>微服务，<strong>是一组分布式开发的架构模式</strong>。像经典的23种设计模式，也是有很多模式：</p><ul><li>配置服务模式</li><li>注册与发现服务模式</li><li>日志服务模式</li><li>事件总线模式</li><li>等</li></ul><p>微服务开发，主要做两个事情：</p><ul><li>使用时，选择需要的模式组件即可。就像平时那样，需要哪个包加哪个（没必要全堆上）</li><li>尽量让服务可独立，服务间用事件总线交互（没有或极少 RPC 依赖）</li></ul><p>开发演进：</p><ul><li>单体引入微服务模式组件（比如，配置服务）</li><li>不同的业务内容，拆分成多个模块。每个模块，尽量是独立的（即不依赖别的模块）</li><li>如果人很多，可以让各模块独立为服务。服务之间尽量用事件总线交互（如果没有集群环境，不要独立为服务）</li></ul><p>顺带，推荐一本不错的书：</p><img src="https://solon.noear.org/img/7a7c4f3ead3b4d2ab30beeb35c693201.webp" width="200">',8),o=[a];function r(n,p,_,d,c,m){return l(),t("div",null,o)}const h=i(e,[["render",r]]);export{f as __pageData,h as default};
