import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/特点/特点/article-son/与 Servlet 的区别.md","filePath":"markdown/特点/特点/article-son/与 Servlet 的区别.md"}'),o={name:"markdown/特点/特点/article-son/与 Servlet 的区别.md"},e=l(`<p>有极小部分的 Java 程序员，是没有其它平台或语言的开发经验的。这些同学中，可能会有人把 Servlet 与 Web 等同起来。没有 Servlet 怎么开发 Web？另外，确实大量的 Java Web 开发框架，是基于 Servlet 包装的！</p><p>一个常见的 Web 过程是怎么回事儿？？？</p><p>简单点就是：客户端通过 http 协议发了一个消息包，然后服务端回了一个消息包。直接处理消息包，肯定是相当麻烦的事情。于是有前辈定义了一套 Servlet 接口规范，让 Web 的处理更简单些。</p><p>而 Solon 则定义了另一套更小些的接口规范。</p><h3 id="_1、handler-context-架构" tabindex="-1">1、Handler + Context 架构 <a class="header-anchor" href="#_1、handler-context-架构" aria-label="Permalink to &quot;1、Handler + Context 架构&quot;">​</a></h3><p>Solon 的 Handler + Context 架构，是用于 Solon Web 开发或适配的一套标准。与 Servlet 类似，都是接口标准。但它比较小，更方便适配任意 http server 框架，比如：</p><ul><li>基于 Servlet 的服务：jetty、undertow</li><li>其它轻量的 http 服务：jdk、jlhttp、smart-http</li><li>也可以是 http 之外的服务：socket、websocket</li></ul><p>具体示意如下：</p><img src="https://solon.noear.org/img/ca942c5718164083a9638d6ee7c0941f.jpg" width="700"><h3 id="_2、handler-context-应用演示" tabindex="-1">2、Handler + Context 应用演示 <a class="header-anchor" href="#_2、handler-context-应用演示" aria-label="Permalink to &quot;2、Handler + Context 应用演示&quot;">​</a></h3><p>以下演示很容易能与上图对应起来，也更能理解 Handler + Context 架构的味道。</p><h4 id="a-与框架对接" tabindex="-1">a）与框架对接 <a class="header-anchor" href="#a-与框架对接" aria-label="Permalink to &quot;a）与框架对接&quot;">​</a></h4><p>一个普通 http 服务与 solon 的对接（比如 jdk 自带的 httpserver），示意一下：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HttpServer</span><span style="color:#89DDFF;">(...);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//设置处理类</span></span>
<span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setHandler</span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">resp</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">-&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//XxxContext 为 Context 接口的适配类</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Context</span><span style="color:#A6ACCD;"> ctx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XxxContext</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//转发给 Solon</span></span>
<span class="line"><span style="color:#A6ACCD;">    Solon</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tryHandle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//启动服务</span></span>
<span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span></code></pre></div><p>可以说 Solon 对原生形态的 http server 是比较友好的。只要完成 XxxContext 类的适配，对接工作就差不多了。</p><h4 id="b-请求处理" tabindex="-1">b）请求处理 <a class="header-anchor" href="#b-请求处理" aria-label="Permalink to &quot;b）请求处理&quot;">​</a></h4><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">App</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> app</span><span style="color:#C792EA;">-&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//为路由器添加一个 Handler</span></span>
<span class="line"><span style="color:#A6ACCD;">    app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">output</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello wrold!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>那 Mvc 是什么鬼？所有 Mvc 的函数最终都会转换为 Handler 并注册到路由器。</p><h3 id="_3、其它" tabindex="-1">3、其它 <a class="header-anchor" href="#_3、其它" aria-label="Permalink to &quot;3、其它&quot;">​</a></h3><ul><li>Solon 的 Server 适配情况：<a href="/article/family-solon-boot.html">《生态 / Solon Boot》</a></li><li>Solon 对 Servlet 仍是友好的（但不推荐）：<a href="/article/429.html">《Solon Web 开发之 Servlet 》</a></li></ul>`,20),t=[e];function p(r,c,D,y,F,i){return a(),n("div",null,t)}const d=s(o,[["render",p]]);export{C as __pageData,d as default};
