import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/云生态/Solon Cloud Id/article-son/snowflake-id-solon-cloud-plugin.md","filePath":"markdown/云生态/Solon Cloud Id/article-son/snowflake-id-solon-cloud-plugin.md"}'),o={name:"markdown/云生态/Solon Cloud Id/article-son/snowflake-id-solon-cloud-plugin.md"},p=l(`<div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.noear</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">snowflake-id-solon-cloud-plugin</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_1、描述" tabindex="-1">1、描述 <a class="header-anchor" href="#_1、描述" aria-label="Permalink to &quot;1、描述&quot;">​</a></h4><p>分布式扩展插件。基于 snowflake 算法适配的 solon cloud 插件。提供ID生成服务。</p><h4 id="_3、配置示例" tabindex="-1">3、配置示例 <a class="header-anchor" href="#_3、配置示例" aria-label="Permalink to &quot;3、配置示例&quot;">​</a></h4><p>以下为默认配置（一般不用配置，默认即可）：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">solon.cloud.snowflake.id</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1577808000000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#默认为 2020-01-01 00:00:00 的时间戳，差不多用69年</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">workId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#默认为 0（即，根据本机IP自动生成），v2.1.3 后支持</span></span></code></pre></div><p>关键属性说明：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>开始时间戳，差不多可以用69年。可配置</td></tr><tr><td>workId</td><td>工作id，根据本机IP自动生成。v2.1.3 后可配置</td></tr><tr><td>dataBlock</td><td>数据块，默认为服务名（即：solon.app.name 属性配置），或编码时指定</td></tr></tbody></table><h4 id="_2、应用示例" tabindex="-1">2、应用示例 <a class="header-anchor" href="#_2、应用示例" aria-label="Permalink to &quot;2、应用示例&quot;">​</a></h4><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoApp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">SolonApp</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DemoApp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//用默认的分组与服务名(它们会产生 DataBlock)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> CloudClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">id</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">generate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//指定分组与服务名(它们会产生 DataBlock)</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//long id2 =CloudClient.idService(&quot;demo&quot;,&quot;demoapi&quot;).generate();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_3、注意事项" tabindex="-1">3、注意事项 <a class="header-anchor" href="#_3、注意事项" aria-label="Permalink to &quot;3、注意事项&quot;">​</a></h4><p>分布式id的生成，是有可能出现重复的： <mark>比如集群内的实例，服务名和IP都相同</mark>。当使用 docker 集群且没有网桥时，就可能会出现此种情况。此时，可通过环境变量指定：(v2.1.3 后支持)</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker run -e solon.cloud.snowflake.id.workId=&#39;1&#39; -d -p 8080:8080 demoapi:v1</span></span></code></pre></div>`,13),t=[p];function e(c,r,i,y,D,d){return a(),n("div",null,t)}const A=s(o,[["render",e]]);export{C as __pageData,A as default};
