import{_ as s,v as n,b as a,R as l}from"./chunks/framework.caa0fbaf.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之常用注解/article-son/@Condition 用法说明.md","filePath":"markdown/学习/Solon 开发之常用注解/article-son/@Condition 用法说明.md"}'),o={name:"markdown/学习/Solon 开发之常用注解/article-son/@Condition 用法说明.md"},p=l(`<p>满足条件的，才会被配置或构建。v2.1.4 后支持</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>onClass</td><td>有类（只能一个；其实没必要多个），这个条件只能作用在函数上（不能作用在类上）</td></tr><tr><td>onClassName</td><td>有类名</td></tr><tr><td>onProperty</td><td>有属性</td></tr><tr><td>onMissingBean</td><td>没有 Bean</td></tr><tr><td>onMissingBeanName</td><td>没有 Bean Name</td></tr></tbody></table><p>关于“onClass”和“onClassName”：</p><ul><li>检测类的本质其实是检查对应的依赖包是否引入了</li><li>同一个依赖包内的类，用一个即可；不同依赖包的类，建议分开检测</li></ul><p>关于“onProperty”，有两种用法：</p><ul><li>&quot;\${yyy.enable}&quot;，有属性即可</li><li>&quot;\${yyy.enable} = true&quot;，有属性且=true（只支持=号，简单才高效；复杂的手写）</li><li>&quot;\${yyy.enable:true} = true&quot;，没属性（通过默认值加持）或者有属性且=true</li></ul><h3 id="_1、加在-bean-函数上" tabindex="-1">1、加在 <code>@Bean</code> 函数上 <a class="header-anchor" href="#_1、加在-bean-函数上" aria-label="Permalink to &quot;1、加在 \`@Bean\` 函数上&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoConfig</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//检查否类有类存在，然后再产生它的bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//@Condition(onClassName=&quot;org.aaa.IXxxAaaImpl&quot;) //有类名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">onClass</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">IXxxAaaImpl</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//有类</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">IXxx</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getXxx</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">IXxxAaaImpl</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//检查有配置存在，然后再产生对应的bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//@Condition(onProperty=&quot;\${yyy.enable}&quot;) //有属性值</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">onProperty</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${yyy.enable} = true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//有属性值，且等于true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">IYyy</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getYyy</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${yyy.config}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">IYyyImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">yyy</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> yyy</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2、加在组件类上-任何组件类" tabindex="-1">2、加在组件类上（任何组件类） <a class="header-anchor" href="#_2、加在组件类上-任何组件类" aria-label="Permalink to &quot;2、加在组件类上（任何组件类）&quot;">​</a></h3><p>使用 onClass 条件时，组件不能继承自检测类。不然获取类元信息时直接会异常</p><ul><li>例</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">onClass</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">XxxDemo</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoConfig</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//DemoConfig 不能扩展自 XxxDemo</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">onClass</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">XxxDemo</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoCom</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//DemoCom 不能扩展自 XxxDemo</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>实例</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Condition</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">onClass</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SaSsoManager</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SaSsoAutoConfigure</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SaSsoConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getConfig</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${sa-token.sso}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">required</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SaSsoConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ssoConfig</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> ssoConfig</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setSaSsoConfig</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">required</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SaSsoConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">saSsoConfig</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        SaSsoManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setConfig</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">saSsoConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setSaSsoTemplate</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">required</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SaSsoTemplate</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ssoTemplate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        SaSsoUtil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ssoTemplate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ssoTemplate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        SaSsoProcessor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ssoTemplate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ssoTemplate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,14),e=[p];function t(c,r,y,D,C,A){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
