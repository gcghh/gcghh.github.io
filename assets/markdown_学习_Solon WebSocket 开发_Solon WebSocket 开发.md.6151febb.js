import{_ as t,v as o,b as d,R as e}from"./chunks/framework.caa0fbaf.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon WebSocket 开发/Solon WebSocket 开发.md","filePath":"markdown/学习/Solon WebSocket 开发/Solon WebSocket 开发.md"}'),r={name:"markdown/学习/Solon WebSocket 开发/Solon WebSocket 开发.md"},a=e('<p>本系统会对 Solon WebSocket 开发展开说明（WebSocket 也简称：ws）。 目前支持的插件有：</p><table><thead><tr><th>插件</th><th>适配框架</th><th>包大小</th><th>信号协议支持</th></tr></thead><tbody><tr><td>Http ::（http 与 ws 使用相同端口）</td><td></td><td></td><td></td></tr><tr><td><a href="/article/90.html">solon.boot.smarthttp</a></td><td>smart-http (aio)</td><td>0.4Mb</td><td>http, ws</td></tr><tr><td><a href="/article/91.html">solon.boot.jetty</a></td><td>jetty (nio)</td><td>1.9Mb</td><td>http, ws</td></tr><tr><td><a href="/article/92.html">solon.boot.undertow</a></td><td>undertow (nio)</td><td>4.3Mb</td><td>http, ws</td></tr><tr><td>WebSocket :: （ws 端口独立）</td><td></td><td></td><td></td></tr><tr><td><a href="/article/93.html">solon.boot.websocket</a></td><td>websocket (nio)</td><td>0.4Mb</td><td>ws</td></tr><tr><td><a href="/article/551.html">solon.boot.websocket.netty</a></td><td>netty (nio)</td><td></td><td>ws</td></tr></tbody></table><p>独立的 WebSocket 插件，会使用独立的端口，且默认为：主端口 + 10000。</p>',3),s=[a];function n(c,h,l,b,i,p){return o(),d("div",null,s)}const m=t(r,[["render",n]]);export{_ as __pageData,m as default};
