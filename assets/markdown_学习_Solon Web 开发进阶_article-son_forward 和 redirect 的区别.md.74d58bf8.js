import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Web 开发进阶/article-son/forward 和 redirect 的区别.md","filePath":"markdown/学习/Solon Web 开发进阶/article-son/forward 和 redirect 的区别.md"}'),o={name:"markdown/学习/Solon Web 开发进阶/article-son/forward 和 redirect 的区别.md"},p=l(`<h3 id="_1、context-forward" tabindex="-1">1、Context::forward <a class="header-anchor" href="#_1、context-forward" aria-label="Permalink to &quot;1、Context::forward&quot;">​</a></h3><p>forward 是在服务端，把当前请求“路径”（比如：/）转换为一个“新路径”（比如：/index）（是当前服务端的路径），通过 Solon.app().tryHandle() 再执行一次;</p><p>客户端对它的感觉是：</p><ul><li>请求只发生一次</li><li>请求的地求没变化（例：请求的是 /）</li></ul><p>内部实现代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">forward</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> pathNew</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">pathNew</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pathNew</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//新地址，必须是路由器内存在的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">tryHandle</span><span style="color:#89DDFF;">(this);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">setHandled</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">setRendered</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Solon 是不支持 ContextPath 特性的。平时通过 ContextPathFilter 进行效果模拟，其内部就是基于 pathNew 这个特性实现的。</p><h3 id="_2、context-redirect" tabindex="-1">2、Context::redirect <a class="header-anchor" href="#_2、context-redirect" aria-label="Permalink to &quot;2、Context::redirect&quot;">​</a></h3><p>redirect 是服务端，输出头信息 Location=“新地址”（例如：/index）和 头信息 Status=302，通知客户端用“新地址”再发起一次请求</p><p>客户端对它的感觉是：</p><ul><li>请求了两次</li><li>请求的地求也变化了</li><li>可以跳转到其它域名的地址</li></ul><p>内部实现代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">redirect</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">redirect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">302</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">redirect</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> code</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">headerSet</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Location</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//可以是相对地址，也可以是绝对地址；也可以是其它域的地址</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">status</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),e=[p];function t(r,c,i,y,D,A){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
