import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/常见问答/article-son/问题纯控制台程序可以没有端口吗.md","filePath":"markdown/学习/常见问答/article-son/问题纯控制台程序可以没有端口吗.md"}'),o={name:"markdown/学习/常见问答/article-son/问题纯控制台程序可以没有端口吗.md"},p=l(`<p>可以！</p><p>是否有端口，主要看有没有引入 solon.boot.? 的包（<a href="/article/family-solon-boot.html">《Solon Boot 生态》</a>）。一般开发纯控制台，可以引入：</p><ul><li>或者 solon 内核包</li><li>或者 solon-lib 快捷包（具体内容，可以看下： <a href="/article/279.html">《solon-lib 依赖内容》</a> ）</li></ul><p>如果引入了 solon.boot.? 但又想关掉端口，可以借用接口：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoApp</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        Solon</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DemoApp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> app</span><span style="color:#C792EA;">-&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enableHttp</span><span style="color:#89DDFF;">(false);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//比如关掉http通讯 </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="关于打包" tabindex="-1">关于打包 <a class="header-anchor" href="#关于打包" aria-label="Permalink to &quot;关于打包&quot;">​</a></h4><p>现有的打包方案，皆为通用（不分端口与否）。</p>`,7),t=[p];function e(c,r,i,D,y,A){return a(),n("div",null,t)}const _=s(o,[["render",e]]);export{F as __pageData,_ as default};
