import{_ as s,v as a,b as l,R as n}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之配置/article-son/五、配置文件加载顺序及外部配置.md","filePath":"markdown/学习/Solon 开发之配置/article-son/五、配置文件加载顺序及外部配置.md"}'),o={name:"markdown/学习/Solon 开发之配置/article-son/五、配置文件加载顺序及外部配置.md"},p=n(`<p>应用配置的加载主要分了三个层级，其加载顺序为：(L1) 内部资源配置文件 -&gt; (L2) 外部配置文件 -&gt; (L3) 动态配置。后加载的会盖掉前加载的（以键为单位复盖）。</p><h3 id="l1-内部资源配置文件" tabindex="-1">（L1）内部资源配置文件 <a class="header-anchor" href="#l1-内部资源配置文件" aria-label="Permalink to &quot;（L1）内部资源配置文件&quot;">​</a></h3><p>是指会与代码一起打包到的资源配置文件，打包后，没法修改。所以也需要“外部配置文件”和“动态配置”加以补充。</p><ul><li>应用属性配置</li></ul><p>即内部的 &quot;app.yml&quot;、&quot;app.properties&quot;。</p><ul><li>应用环境属性配置</li></ul><p>即内部带环境标记的 &quot;app-xxx.yml&quot;、&quot;app-xxx.properties&quot;（如：&quot;app-dev.yml&quot;，&quot;app-pro.yml&quot;）。</p><h3 id="l2-外部配置文件" tabindex="-1">（L2）外部配置文件 <a class="header-anchor" href="#l2-外部配置文件" aria-label="Permalink to &quot;（L2）外部配置文件&quot;">​</a></h3><ul><li>通过 “solon.extend” 指定的外部扩展目录里的配置文件（不推荐）</li></ul><p>例 &quot;solon.extend=ext&quot;，会加载 jar 文件边上 ext 目录的所有配置文件（.yml 或 .properties 文件）</p><ul><li>通过 “solon.config.add” 添加的外部配置文件</li></ul><p>例 &quot;solon.config.add=./app.yml&quot;，会加载 jar 边上的 app.yml 配置文件（多个用&quot;,&quot;隔开）</p><h3 id="l3-动态配置" tabindex="-1">（L3）动态配置 <a class="header-anchor" href="#l3-动态配置" aria-label="Permalink to &quot;（L3）动态配置&quot;">​</a></h3><ul><li>启动参数</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">java -jar demo.jar -debug=1</span></span></code></pre></div><ul><li>系统属性</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">java -Dsolon.config.add=./app.yml -jar demo.jar</span></span></code></pre></div><ul><li>环境变量（比如编排容器时）</li></ul><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">demoapi</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo/demoapi:1.0.0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">container_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demoapi</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">solon.stop.safe=1</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8080:8080</span></span></code></pre></div><p>&quot;solon&quot; 开头的环境变量，会被框架同步到系统属性（System::getProperties）与应用属性（Solon::cfg）。</p>`,20),e=[p];function t(r,c,i,d,u,y){return a(),l("div",null,e)}const D=s(o,[["render",t]]);export{m as __pageData,D as default};
