import{_ as s,v as a,b as l,R as n}from"./chunks/framework.caa0fbaf.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Cloud 开发/article-son/使用分布式注册与发现服务.md","filePath":"markdown/学习/Solon Cloud 开发/article-son/使用分布式注册与发现服务.md"}'),o={name:"markdown/学习/Solon Cloud 开发/article-son/使用分布式注册与发现服务.md"},p=n(`<p><a href="/article/family-solon-cloud-discovery">生态 / Solon Cloud Discovery [传送]</a></p><h3 id="_1、情况简介" tabindex="-1">1、情况简介 <a class="header-anchor" href="#_1、情况简介" aria-label="Permalink to &quot;1、情况简介&quot;">​</a></h3><p>分布式注册与发现服务，也可叫云端注册与发现服务（一般给 Rpc 架构使用）。</p><ul><li>主要通过 CloudDiscoveryService 接口进行适配</li><li>使用 CloudClient.discovery() 获取适配实例；从而注册和发现（一般不直接使用。自动的）</li><li>还可以借用 LoadBalance.get(group, service) 进行简单发现服务（一般也不直接使用）</li><li>一般无感知使用</li></ul><p>目前适配有：local, water, consul, nacos, zookeeper, polaris 等</p><h3 id="_2、简单演示" tabindex="-1">2、简单演示 <a class="header-anchor" href="#_2、简单演示" aria-label="Permalink to &quot;2、简单演示&quot;">​</a></h3><h4 id="_2-1、配置" tabindex="-1">2.1、配置 <a class="header-anchor" href="#_2-1、配置" aria-label="Permalink to &quot;2.1、配置&quot;">​</a></h4><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">solon.app</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">group</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#同时也会做为服务分组（如果适配的服务支持的话）</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demoapp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#同时也做为服务注册名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">solon.cloud.water</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">server</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">waterapi:9371</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h4 id="_2-2、rpc-注册与发现应用" tabindex="-1">2.2、Rpc 注册与发现应用 <a class="header-anchor" href="#_2-2、rpc-注册与发现应用" aria-label="Permalink to &quot;2.2、Rpc 注册与发现应用&quot;">​</a></h4><p>Rpc 服务端（服务注册是自动的，用户无感知）</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1.所有 remoting = true 的组件，即为 rpc 服务；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2.以 uri 的形式提供资源描述，以同时支持 rest api 和 rpc 两种模式（不要有相同的函数名出现）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Mapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/rpc/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Remoting</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloServiceImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloService</span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Rpc 客户端</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//注入Rpc服务代理（会自动通过发现服务获取服务集群）</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">NamiClient</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hellorpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">path</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/rpc/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">HelloService</span><span style="color:#A6ACCD;"> helloService</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> helloService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_2-3、基于发现服务的负载均衡" tabindex="-1">2.3、基于发现服务的负载均衡 <a class="header-anchor" href="#_2-3、基于发现服务的负载均衡" aria-label="Permalink to &quot;2.3、基于发现服务的负载均衡&quot;">​</a></h4><p>发现服务的适配成果，最终会转为负载均衡接口：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//根据服务名获取“负载均衡”</span></span>
<span class="line"><span style="color:#C792EA;">LoadBalance</span><span style="color:#A6ACCD;"> loadBalance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LoadBalance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hellorpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>“@NamiClient(name = &quot;hellorpc&quot;)” 便于基于 LoadBalance。再比如，支持服务名调用的 http client（solon.cloud.httputils）</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> rst </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> HttpUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">http</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hellorpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/rpc/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">post</span><span style="color:#89DDFF;">();</span></span></code></pre></div><p><strong>代码演示：</strong></p><p><a href="https://gitee.com/noear/solon-examples/tree/main/9.Solon-Cloud" target="_blank" rel="noreferrer">https://gitee.com/noear/solon-examples/tree/main/9.Solon-Cloud</a></p>`,20),e=[p];function t(c,r,D,y,i,F){return a(),l("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
