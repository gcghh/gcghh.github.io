import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Data 开发/article-son/四、缓存类型的配置切换和二级缓存应用.md","filePath":"markdown/学习/Solon Data 开发/article-son/四、缓存类型的配置切换和二级缓存应用.md"}'),p={name:"markdown/学习/Solon Data 开发/article-son/四、缓存类型的配置切换和二级缓存应用.md"},o=l(`<p>为了切换，需要把可能用到的缓存插件都引入：</p><table><thead><tr><th>驱动类型</th><th>插件</th><th>说明</th></tr></thead><tbody><tr><td>local</td><td><a href="/article/14.html">solon.data</a></td><td>这个不用单独引入（很多插件都会带上它）</td></tr><tr><td>redis</td><td><a href="/article/16.html">solon.cache.jedis</a></td><td>jedis 适配插件</td></tr><tr><td>redis</td><td><a href="/article/236.html">solon.cache.redisson</a></td><td>redisson 适配插件</td></tr><tr><td>memcached</td><td><a href="/article/17.html">solon.cache.spymemcached</a></td><td>memcached 适配插件</td></tr></tbody></table><h3 id="_1、根据缓存类型切换" tabindex="-1">1、根据缓存类型切换 <a class="header-anchor" href="#_1、根据缓存类型切换" aria-label="Permalink to &quot;1、根据缓存类型切换&quot;">​</a></h3><p>通过“driverType”属性申明，进而切换。示例：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">demo.cache1</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">driverType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">local</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#切换为 memcached</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#demo.cache1:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  driverType: &quot;memcached&quot; #驱动类型</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  keyHeader: &quot;demo&quot; #默认为 \${solon.app.name} ，可不配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  defSeconds: 30 #默认为 30，可不配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  server: &quot;localhost:6379&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#  password: &quot;&quot; #默认为空，可不配置</span></span></code></pre></div><p>使用 CacheServiceSupplier，自动根据配置获取缓存服务：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Demo1Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CacheService</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cahce1</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${demo1.cache}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CacheServiceSupplier</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">supplier</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> supplier</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2、二级缓存的使用" tabindex="-1">2、二级缓存的使用 <a class="header-anchor" href="#_2、二级缓存的使用" aria-label="Permalink to &quot;2、二级缓存的使用&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Demo2Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CacheService</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cahce1</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">Inject</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${demo1.cache}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CacheServiceSupplier</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">supplier</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">CacheService</span><span style="color:#A6ACCD;"> cacheService </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> supplier</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cacheService </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> LocalCacheService</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//如果是本地缓存，直接返回</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> cacheService</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//尝试构建二级缓存，且缓冲5秒（1级为本地；2级为配置的）</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">LocalCacheService</span><span style="color:#A6ACCD;"> local </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LocalCacheService</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">SecondCacheService</span><span style="color:#A6ACCD;"> tmp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SecondCacheService</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">local</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cacheService</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> tmp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>缓冲啥意思？当本地没有、远程有时，从远程拿缓存，在本地存5秒时间。称之缓冲。(否则，每次要去远程拿)</p>`,10),e=[o];function t(c,r,y,D,i,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
