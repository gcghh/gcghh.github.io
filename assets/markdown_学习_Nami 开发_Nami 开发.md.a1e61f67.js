import{_ as t,v as d,b as e,R as o}from"./chunks/framework.caa0fbaf.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Nami 开发/Nami 开发.md","filePath":"markdown/学习/Nami 开发/Nami 开发.md"}'),a={name:"markdown/学习/Nami 开发/Nami 开发.md"},c=o("<p>Nami 最初是做为 Solon Remoting 的申明式客户端而设计的。后来，也是很好的申明式 Http 请求框架（目前不支持文件上传）。它支持多通道、多编码切换。</p><p>主要注解有：</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@NamiClient</td><td>客户端注解（可以在接口申明时用，也可在注入时用）</td></tr><tr><td>@NamiMapping</td><td>指定请求印射（指定method、指定path，等...）</td></tr><tr><td>@NamiBody</td><td>指定参数转为Body</td></tr></tbody></table><p>编码组件（即序列化组件）：</p><table><thead><tr><th>Nami 组件</th><th>说明</th></tr></thead><tbody><tr><td>nami.coder.snack3</td><td>对<code>snack3</code>的编解码适配（推荐）</td></tr><tr><td>nami.coder.fastjson</td><td>对<code>fastjson</code>的编解码适配</td></tr><tr><td>nami.coder.hessian</td><td>对<code>hessian</code>的编解码适配，v1.10.10 后改为 <code>sofa-hessian</code></td></tr><tr><td>nami.coder.protostuff</td><td>对<code>protostuff</code>的编解码适配</td></tr></tbody></table><p>通道组件：</p><table><thead><tr><th>Nami 组件</th><th>说明</th></tr></thead><tbody><tr><td>nami.channel.http.okhttp</td><td>对<code>okhttp</code>的通道适配（推荐）</td></tr><tr><td>nami.channel.http.hutool</td><td>对<code>hutool</code>的通道适配</td></tr><tr><td>nami.channel.socketd</td><td>对<code>socketd</code>的通道基础适配</td></tr><tr><td>nami.channel.socketd.jdksocket</td><td>对<code>socketd.jdksocket</code>的通道适配</td></tr><tr><td>nami.channel.socketd.rsocket</td><td>对<code>socketd.rsocket</code>的通道适配</td></tr><tr><td>nami.channel.socketd.websocket</td><td>对<code>socketd.websocket</code>的通道适配</td></tr><tr><td>nami.channel.socketd.smartsocket</td><td>对<code>socketd.smartsocket</code>的通道适配（推荐）</td></tr></tbody></table>",7),r=[c];function s(n,h,i,m,p,k){return d(),e("div",null,r)}const b=t(a,[["render",s]]);export{_ as __pageData,b as default};
