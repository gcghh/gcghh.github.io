import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon 开发之配置/article-son/二、应用常用配置说明.md","filePath":"markdown/学习/Solon 开发之配置/article-son/二、应用常用配置说明.md"}'),o={name:"markdown/学习/Solon 开发之配置/article-son/二、应用常用配置说明.md"},p=l(`<p>约定参考：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//资源路径约定（不用配置；也不能配置）</span></span>
<span class="line"><span style="color:#A6ACCD;">resources/app.yml（ 或 app.properties ） #为应用配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">resources/WEB-INF/static/      或者 resources/static/     #为静态文件根目录（目录二选一，v2.2.10 后支持）</span></span>
<span class="line"><span style="color:#A6ACCD;">resources/WEB-INF/templates/   或者 resources/templates/  #为视图模板文件根目录，支持多种视图共存（目录二选一，v2.2.10 后支持）</span></span></code></pre></div><p>属性之间的引用，使用 &quot;\${...}&quot;：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">test.demo1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${db1.url}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                          </span><span style="color:#676E95;font-style:italic;">#引用应用属性</span></span>
<span class="line"><span style="color:#F07178;">test.demo2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jdbc:mysql:\${db1.server}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">#引用应用属性并组合</span></span>
<span class="line"><span style="color:#F07178;">test.demo3</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jdbc:mysql:\${db1.server}/\${db1.db}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">#引用多个应用属性并组合</span></span>
<span class="line"><span style="color:#F07178;">test.demo4</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${JAVA_HOME}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                        </span><span style="color:#676E95;font-style:italic;">#引用环境变量</span></span></code></pre></div><h3 id="_1、服务端基本属性" tabindex="-1">1、服务端基本属性 <a class="header-anchor" href="#_1、服务端基本属性" aria-label="Permalink to &quot;1、服务端基本属性&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#服务端口（默认为8080）</span></span>
<span class="line"><span style="color:#F07178;">server.port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务主机（ip）</span></span>
<span class="line"><span style="color:#F07178;">server.host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务包装端口（默认为 \${server.port}）//v1.12.1 后支持  //一般用docker + 服务注册时才可能用到</span></span>
<span class="line"><span style="color:#F07178;">server.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务包装主机（ip）//v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务上下文路径</span></span>
<span class="line"><span style="color:#F07178;">server.contextPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test-service/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#v1.11.2 后支持</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 信号名称，服务注册时可以为信号指定名称（默认为 \${solon.app.name}）</span></span>
<span class="line"><span style="color:#F07178;">server.http.name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">waterapi</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 信号端口（默认为 \${server.port}）</span></span>
<span class="line"><span style="color:#F07178;">server.http.port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 信号主机（ip）</span></span>
<span class="line"><span style="color:#F07178;">server.http.host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 信号包装端口 //v1.12.1 后支持  //一般用docker + 服务注册时才可能用到</span></span>
<span class="line"><span style="color:#F07178;">server.http.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 信号包装主机（ip）//v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 最小线程数（默认：0表示自动，支持固定值 2 或 内核倍数 x2）//v1.10.13 后支持 //一般不用配置</span></span>
<span class="line"><span style="color:#F07178;">server.http.coreThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 最大线程数（默认：0表示自动，支持固定值 32 或 内核倍数 x32） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.maxThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 闲置线程超时（0表示自动，单位毫秒） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.idleTimeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 http 是否为IO密集型？ //v1.12.2 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.ioBound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 信号名称，服务注册时可以为信号指定名称（默认为 \${solon.app.name}）</span></span>
<span class="line"><span style="color:#F07178;">server.socket.name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">waterapi.tcp</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 信号端口（默认为 20000+\${server.port}）</span></span>
<span class="line"><span style="color:#F07178;">server.socket.port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">28080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 信号主机（ip）</span></span>
<span class="line"><span style="color:#F07178;">server.socket.host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 信号包装端口 //v1.12.1 后支持  //一般用docker + 服务注册时才可能用到</span></span>
<span class="line"><span style="color:#F07178;">server.socket.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">28080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 信号包装主机（ip）//v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 最小线程数（默认：0表示自动，支持固定值 2 或 倍数 x2）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.coreThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 最大线程数（默认：0表示自动，支持固定值 32 或 倍数 x32）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.maxThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 闲置线程超时（0表示自动，单位毫秒）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.idleTimeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 socket 是否为IO密集型？ //v1.12.2 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.ioBound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 信号名称，服务注册时可以为信号指定名称（默认为 \${solon.app.name}）</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">waterapi.ws</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 信号端口（默认为 10000+\${server.port}）</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 信号主机（ip）</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 信号包装端口 //v1.12.1 后支持  //一般用docker + 服务注册时才可能用到</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.wrapPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 信号包装主机（ip）//v1.12.1 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.wrapHost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 最小线程数（默认：0表示自动，支持固定值 2 或 倍数 x2）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.coreThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 最大线程数（默认：0表示自动，支持固定值 32 或 倍数 x32）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.maxThreads</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 闲置线程超时（0表示自动，单位毫秒）） //v1.10.13 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.idleTimeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#服务 websocket 是否为IO密集型？ //v1.12.2 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.ioBound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div><p>关于包装主机与包装端口的说明：</p><ul><li>比如，服务在docker里运行，就相当于被docker包装了一层。</li><li>此时，要向外部注册服务，就可能需要使用包装主机与包装端口。</li></ul><h3 id="_2、请求会话相关" tabindex="-1">2、请求会话相关 <a class="header-anchor" href="#_2、请求会话相关" aria-label="Permalink to &quot;2、请求会话相关&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#设定最大的请求包大小（或表单项的值大小）//默认: 2m</span></span>
<span class="line"><span style="color:#F07178;">server.request.maxBodySize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">2mb</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#kb,mb</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定最大的上传文件大小</span></span>
<span class="line"><span style="color:#F07178;">server.request.maxFileSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">2mb</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#kb,mb (默认使用 maxBodySize 配置值)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定最大的请求头大小//默认: 8k</span></span>
<span class="line"><span style="color:#F07178;">server.request.maxHeaderSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8kb</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#kb,mb</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定请求体编码</span></span>
<span class="line"><span style="color:#F07178;">server.request.encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定响应体编码</span></span>
<span class="line"><span style="color:#F07178;">server.response.encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定会话超时秒数（单位：秒）</span></span>
<span class="line"><span style="color:#F07178;">server.session.timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7200</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定会话id的cookieName</span></span>
<span class="line"><span style="color:#F07178;">server.session.cookieName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SOLONID</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定会话状态的cookie域（默认为当前域名）</span></span>
<span class="line"><span style="color:#F07178;">server.session.state.domain</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">noear.org</span></span></code></pre></div><h3 id="_3、服务端ssl证书配置属性-https" tabindex="-1">3、服务端SSL证书配置属性（https） <a class="header-anchor" href="#_3、服务端ssl证书配置属性-https" aria-label="Permalink to &quot;3、服务端SSL证书配置属性（https）&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#设定 ssl 证书（支持：solon.boot.jdkhttp 或 solon.boot.jlhttp 或 solon.boot.smarthttp 或 solon.boot.jetty 或 solon.boot.undertow）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#属于所有信号的公共配置</span></span>
<span class="line"><span style="color:#F07178;">server.ssl.keyStore</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./demo.jks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#或 &quot;./demo.pfx&quot; #把文件放外面</span></span>
<span class="line"><span style="color:#F07178;">server.ssl.keyPassword</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定 http 信号的 ssl 证书（如果没有，会使用 server.ssl 的配置）//v2.3.7 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.http.ssl.enable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">server.http.ssl.keyStore</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./demo.jks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#或 &quot;./demo.pfx&quot; #把文件放外面</span></span>
<span class="line"><span style="color:#F07178;">server.http.ssl.keyPassword</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定 socket 信号的 ssl 证书（如果没有，会使用 server.ssl 的配置）//v2.3.7 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.socket.ssl.enable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">server.socket.ssl.keyStore</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./demo.jks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#或 &quot;./demo.pfx&quot; #把文件放外面</span></span>
<span class="line"><span style="color:#F07178;">server.socket.ssl.keyPassword</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#设定 websocket 信号的 ssl 证书（如果没有，会使用 server.ssl 的配置）//v2.3.7 后支持</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.ssl.enable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.ssl.keyStore</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./demo.jks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#或 &quot;./demo.pfx&quot; #把文件放外面</span></span>
<span class="line"><span style="color:#F07178;">server.websocket.ssl.keyPassword</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>注意：添加 ssl 证书后，应用的 &quot;server.port&quot; 端口只能用 <code>https</code> 来访问。</p><h3 id="_4、应用基本属性" tabindex="-1">4、应用基本属性 <a class="header-anchor" href="#_4、应用基本属性" aria-label="Permalink to &quot;4、应用基本属性&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#应用名称</span></span>
<span class="line"><span style="color:#F07178;">solon.app.name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">waterapi</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#应用组</span></span>
<span class="line"><span style="color:#F07178;">solon.app.group</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">water</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#应用命名空间（一般用不到，只有支持的组件才用）</span></span>
<span class="line"><span style="color:#F07178;">solon.app.namespace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#应用标题</span></span>
<span class="line"><span style="color:#F07178;">solon.app.title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WATER</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#应用体外扩展目录</span></span>
<span class="line"><span style="color:#F07178;">solon.extend</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ext</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#应用元信息输出开启（输出每个插件的信息）</span></span>
<span class="line"><span style="color:#F07178;">solon.output.meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span></code></pre></div><h3 id="_5、应用环境配置切换" tabindex="-1">5、应用环境配置切换 <a class="header-anchor" href="#_5、应用环境配置切换" aria-label="Permalink to &quot;5、应用环境配置切换&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#应用环境配置（主要用于切换包内不同的配置文件）</span></span>
<span class="line"><span style="color:#F07178;">solon.env</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#例：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># app.yml      #应用主配置（必然会加载）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># app-dev.yml  #应用dev环境配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># app-pro.yml  #应用pro环境配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#启动时：java -Dsolon.env=pro -jar demo.jar 或者 java -jar demo.jar --env=pro</span></span></code></pre></div><h3 id="_6、应用配置增强" tabindex="-1">6、应用配置增强 <a class="header-anchor" href="#_6、应用配置增强" aria-label="Permalink to &quot;6、应用配置增强&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#添加外部扩展配置（用于指定外部配置。策略：先加载内部的，再加载外部的盖上去）</span></span>
<span class="line"><span style="color:#F07178;">solon.config.add</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./app.yml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#把文件放外面（多个用&quot;,&quot;隔开） //替代已弃用的 solon.config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#添加多个内部配置（在 app.yml 之外，添加配置加载）//v2.2.7 后支持</span></span>
<span class="line"><span style="color:#F07178;">solon.config.load</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app-ds-\${solon.env}.yml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">#可以是环境相关的</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app-auth_\${solon.env}.yml</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">config/common.yml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;font-style:italic;">#也可以环境无关的或者带目录的</span></span></code></pre></div><h3 id="_7、视图后缀与模板引擎的映射配置" tabindex="-1">7、视图后缀与模板引擎的映射配置 <a class="header-anchor" href="#_7、视图后缀与模板引擎的映射配置" aria-label="Permalink to &quot;7、视图后缀与模板引擎的映射配置&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#默认约定的配置（不需要配置，除非要修改）</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.htm</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">BeetlRender</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#简写</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.shtm</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">EnjoyRender</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.ftl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FreemarkerRender</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.jsp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">JspRender</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.html</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ThymeleafRender</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#添加自义定映射时，需要写全类名</span></span>
<span class="line"><span style="color:#F07178;">solon.view.mapping.vm</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">org.noear.solon.view.velocity.VelocityRender</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#全名（一般用简写）</span></span></code></pre></div><h3 id="_8、mime-配置" tabindex="-1">8、MIME 配置 <a class="header-anchor" href="#_8、mime-配置" aria-label="Permalink to &quot;8、MIME 配置&quot;">​</a></h3><p>一般有特别的静态资源后缀，才会用到</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#添加MIME印射（如果有需要？）</span></span>
<span class="line"><span style="color:#F07178;">solon.mime</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">vue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/html</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">map</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">log</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#这三行只是示例一下!</span></span></code></pre></div><h3 id="_9、安全停止配置" tabindex="-1">9、安全停止配置 <a class="header-anchor" href="#_9、安全停止配置" aria-label="Permalink to &quot;9、安全停止配置&quot;">​</a></h3><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">solon.stop.safe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">#安全停止（0或1）//（v2.1.0 后支持；之前只能用接口启用）</span></span>
<span class="line"><span style="color:#F07178;">solon.stop.delay</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">#安全停止的延时秒数（默认10秒）</span></span></code></pre></div>`,26),e=[p];function t(c,r,y,i,D,F){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
