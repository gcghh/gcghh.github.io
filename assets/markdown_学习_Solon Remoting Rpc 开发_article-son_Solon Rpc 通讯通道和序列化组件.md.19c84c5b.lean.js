import{_ as t,v as o,b as a,R as n}from"./chunks/framework.caa0fbaf.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/学习/Solon Remoting Rpc 开发/article-son/Solon Rpc 通讯通道和序列化组件.md","filePath":"markdown/学习/Solon Remoting Rpc 开发/article-son/Solon Rpc 通讯通道和序列化组件.md"}'),e={name:"markdown/学习/Solon Remoting Rpc 开发/article-son/Solon Rpc 通讯通道和序列化组件.md"},s=n('<h3 id="_1、通道组件" tabindex="-1">1、通道组件 <a class="header-anchor" href="#_1、通道组件" aria-label="Permalink to &quot;1、通道组件&quot;">​</a></h3><table><thead><tr><th>通道</th><th>客户端组件</th><th>对口的服务端支持组件</th></tr></thead><tbody><tr><td>Http 通道</td><td>nami.channel.http.okhttp<br>nami.channel.http.hutool</td><td>solon.boot.jdkhttp<br>solon.boot.jlhttp<br>solon.boot.smarthttp<br>solon.boot.jetty<br>solon.boot.undertow</td></tr><tr><td>Socket 通道</td><td>nami.channel.socketd.jdksocket<br>nami.channel.socketd.netty<br> nami.channel.socketd.smartsocket</td><td>solon.boot.socketd.jdksocket<br>solon.boot.socketd.netty<br>solon.boot.socketd.smartsocket</td></tr><tr><td>WebSocket 通道</td><td>nami.channel.socketd.websocket</td><td>solon.boot.smarthttp<br>solon.boot.jetty<br>solon.boot.undertow<br>solon.boot.websocket</td></tr></tbody></table><h3 id="_2、序列化方案组件" tabindex="-1">2、序列化方案组件 <a class="header-anchor" href="#_2、序列化方案组件" aria-label="Permalink to &quot;2、序列化方案组件&quot;">​</a></h3><table><thead><tr><th>序列化方案</th><th>客户端组件</th><th>对口的服务端组件</th></tr></thead><tbody><tr><td>Form 方案</td><td>表单模式</td><td></td></tr><tr><td>Json 方案</td><td>nami.coder.snack3<br>nami.coder.fastjson<br>nami.coder.fastjson2<br>nami.coder.jackson</td><td>solon.serialization.snack3<br>solon.serialization.fastjson<br>solon.serialization.fastjson2<br>solon.serialization.jackson</td></tr><tr><td>Hessian 方案</td><td>nami.coder.hessian</td><td>solon.serialization.hessian</td></tr><tr><td>Protostuff 方案</td><td>nami.coder.protostuff</td><td>solon.serialization.protostuff</td></tr></tbody></table><p>选择序列化方案时，尽量客户端与服务端的框架一一对应。</p><h3 id="_3、使用说明" tabindex="-1">3、使用说明 <a class="header-anchor" href="#_3、使用说明" aria-label="Permalink to &quot;3、使用说明&quot;">​</a></h3><p>从客户端的角度，我们需要的是：一个 channel + 一个 coder。例：</p><ul><li>nami.channel.http.okhttp</li><li>nami.coder.snack3</li></ul><p>从服务端的角度，我们需要的是：一个 boot + 一个 serialization。例：</p><ul><li>solon.boot.jlhttp （solon-api 里包函了）</li><li>solon.serialization.snack3 （solon-api 里包函了）</li></ul>',10),r=[s];function d(l,i,c,h,b,p){return o(),a("div",null,r)}const k=t(e,[["render",d]]);export{_ as __pageData,k as default};
